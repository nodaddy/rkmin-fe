{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Vector } from './vector';\n/**\n * Creates a rect vector\n */\n\nvar Rect = function (_super) {\n  __extends(Rect, _super);\n  /**\n   * if either of the params receive one number (`new Rect(10,10)`):\n   *  * `point` is applied to `x` and `y`\n   *  * `size` is applied to `w` (width) and `h` (height)\n   *\n   * if either of the params receive a tuple (`new Rect([10, 5],[20, 30])`)\n   *  * `point[0]` is applied to `x` and `point[1]` is applied to `y`\n   *  * `size[0]` is applied to `w` (width) and `size[1]` is applied to `h` (height)\n   *\n   * @param point the point where the rect will be drawn\n   * @param size the size of the rect\n   */\n\n\n  function Rect(point, size) {\n    var _this = _super.call(this, 'rect') || this;\n\n    _this.setPoint(point);\n\n    _this.setSize(size);\n\n    return _this;\n  }\n  /**\n   * Sets the point to the rect vector\n   * @param point the point of the rect vector\n   */\n\n\n  Rect.prototype.setPoint = function (point) {\n    if (Array.isArray(point)) {\n      this.content.x = point[0];\n      this.content.y = point[1];\n    } else {\n      this.content.x = point;\n      this.content.y = point;\n    }\n  };\n  /**\n   * Sets the size of the rect vector\n   * @param size the sixe of the rect vector\n   */\n\n\n  Rect.prototype.setSize = function (size) {\n    if (Array.isArray(size)) {\n      this.content.w = size[0];\n      this.content.h = size[1];\n    } else {\n      this.content.w = size;\n      this.content.h = size;\n    }\n  };\n  /**\n   * round the borders\n   * @param num radius number\n   */\n\n\n  Rect.prototype.round = function (num) {\n    this.content.r = num;\n    return this;\n  };\n\n  return Rect;\n}(Vector);\n\nexport { Rect };","map":{"version":3,"sources":["../../../../src/lib/definitions/vector/rect.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,QAAuB,UAAvB;AAGA;;AAEG;;AACH,IAAA,IAAA,GAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;AAEtB;;;;;;;;;;;AAWG;;;AACH,WAAA,IAAA,CACI,KADJ,EAEI,IAFJ,EAEmC;AAFnC,QAAA,KAAA,GAII,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IAJjB;;AAKI,IAAA,KAAI,CAAC,QAAL,CAAc,KAAd;;AACA,IAAA,KAAI,CAAC,OAAL,CAAa,IAAb;;;AACH;AAED;;;AAGG;;;AACK,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,KAAjB,EAAiD;AAC7C,QAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACtB,WAAK,OAAL,CAAa,CAAb,GAAiB,KAAK,CAAC,CAAD,CAAtB;AACA,WAAK,OAAL,CAAa,CAAb,GAAiB,KAAK,CAAC,CAAD,CAAtB;AACH,KAHD,MAGO;AACH,WAAK,OAAL,CAAa,CAAb,GAAiB,KAAjB;AACA,WAAK,OAAL,CAAa,CAAb,GAAiB,KAAjB;AACH;AACJ,GARO;AAUR;;;AAGG;;;AACK,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAR,UAAgB,IAAhB,EAA+C;AAC3C,QAAI,KAAK,CAAC,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACrB,WAAK,OAAL,CAAa,CAAb,GAAiB,IAAI,CAAC,CAAD,CAArB;AACA,WAAK,OAAL,CAAa,CAAb,GAAiB,IAAI,CAAC,CAAD,CAArB;AACH,KAHD,MAGO;AACH,WAAK,OAAL,CAAa,CAAb,GAAiB,IAAjB;AACA,WAAK,OAAL,CAAa,CAAb,GAAiB,IAAjB;AACH;AACJ,GARO;AAUR;;;AAGG;;;AACI,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,GAAb,EAAwB;AACpB,SAAK,OAAL,CAAa,CAAb,GAAiB,GAAjB;AACA,WAAO,IAAP;AACH,GAHM;;AAKX,SAAA,IAAA;AAAC,CA5DD,CAA0B,MAA1B,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Vector } from './vector';\n/**\n * Creates a rect vector\n */\nvar Rect = /** @class */ (function (_super) {\n    __extends(Rect, _super);\n    /**\n     * if either of the params receive one number (`new Rect(10,10)`):\n     *  * `point` is applied to `x` and `y`\n     *  * `size` is applied to `w` (width) and `h` (height)\n     *\n     * if either of the params receive a tuple (`new Rect([10, 5],[20, 30])`)\n     *  * `point[0]` is applied to `x` and `point[1]` is applied to `y`\n     *  * `size[0]` is applied to `w` (width) and `size[1]` is applied to `h` (height)\n     *\n     * @param point the point where the rect will be drawn\n     * @param size the size of the rect\n     */\n    function Rect(point, size) {\n        var _this = _super.call(this, 'rect') || this;\n        _this.setPoint(point);\n        _this.setSize(size);\n        return _this;\n    }\n    /**\n     * Sets the point to the rect vector\n     * @param point the point of the rect vector\n     */\n    Rect.prototype.setPoint = function (point) {\n        if (Array.isArray(point)) {\n            this.content.x = point[0];\n            this.content.y = point[1];\n        }\n        else {\n            this.content.x = point;\n            this.content.y = point;\n        }\n    };\n    /**\n     * Sets the size of the rect vector\n     * @param size the sixe of the rect vector\n     */\n    Rect.prototype.setSize = function (size) {\n        if (Array.isArray(size)) {\n            this.content.w = size[0];\n            this.content.h = size[1];\n        }\n        else {\n            this.content.w = size;\n            this.content.h = size;\n        }\n    };\n    /**\n     * round the borders\n     * @param num radius number\n     */\n    Rect.prototype.round = function (num) {\n        this.content.r = num;\n        return this;\n    };\n    return Rect;\n}(Vector));\nexport { Rect };\n//# sourceMappingURL=rect.js.map"]},"metadata":{},"sourceType":"module"}