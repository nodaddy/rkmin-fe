{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { StyleDefinition } from '../style-definition';\n/**\n * Class to create a list definition\n */\n\nvar List = function (_super) {\n  __extends(List, _super);\n\n  function List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * It applies a type marker\n   * @param type The type of marker\n   */\n\n\n  List.prototype.type = function (type) {\n    this.content.type = type;\n    return this;\n  };\n  /**\n   * It sets a color to the marker\n   * @param color The color\n   */\n\n\n  List.prototype.markerColor = function (color) {\n    this.content.markerColor = color;\n    return this;\n  };\n\n  return List;\n}(StyleDefinition);\n\nexport { List };","map":{"version":3,"sources":["../../../../src/lib/definitions/list/list.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,eAAT,QAAgC,qBAAhC;AAEA;;AAEG;;AACH,IAAA,IAAA,GAAA,UAAA,MAAA,EAAA;AAA4D,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAA5D,WAAA,IAAA,GAAA;;AAoBC;AAlBG;;;AAGG;;;AACI,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,GAAP,UAAY,IAAZ,EAAwB;AACpB,SAAK,OAAL,CAAa,IAAb,GAAoB,IAApB;AACA,WAAO,IAAP;AACH,GAHM;AAKP;;;AAGG;;;AACI,EAAA,IAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,KAAnB,EAAgC;AAC5B,SAAK,OAAL,CAAa,WAAb,GAA2B,KAA3B;AACA,WAAO,IAAP;AACH,GAHM;;AAKX,SAAA,IAAA;AAAC,CApBD,CAA4D,eAA5D,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { StyleDefinition } from '../style-definition';\n/**\n * Class to create a list definition\n */\nvar List = /** @class */ (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * It applies a type marker\n     * @param type The type of marker\n     */\n    List.prototype.type = function (type) {\n        this.content.type = type;\n        return this;\n    };\n    /**\n     * It sets a color to the marker\n     * @param color The color\n     */\n    List.prototype.markerColor = function (color) {\n        this.content.markerColor = color;\n        return this;\n    };\n    return List;\n}(StyleDefinition));\nexport { List };\n//# sourceMappingURL=list.js.map"]},"metadata":{},"sourceType":"module"}