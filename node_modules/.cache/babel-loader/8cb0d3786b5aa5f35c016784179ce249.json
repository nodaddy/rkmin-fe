{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Vector } from './vector';\n/**\n * Creates a polyline vector\n */\n\nvar Polyline = function (_super) {\n  __extends(Polyline, _super);\n  /**\n   * @param points {Array<IPoint>} An array of points (optional)\n   */\n\n\n  function Polyline(points) {\n    if (points === void 0) {\n      points = [];\n    }\n\n    var _this = _super.call(this, 'polyline') || this;\n\n    _this.content.points = points;\n    return _this;\n  }\n  /**\n   * Closes the path\n   */\n\n\n  Polyline.prototype.closePath = function () {\n    this.content.closePath = true;\n    return this;\n  };\n  /**\n   * Adds a new point to draw the polyline\n   * @param x coord X\n   * @param y coord Y\n   */\n\n\n  Polyline.prototype.addPoint = function (x, y) {\n    this.content.points.push({\n      x: x,\n      y: y\n    });\n    return this;\n  };\n\n  return Polyline;\n}(Vector);\n\nexport { Polyline };","map":{"version":3,"sources":["../../../../src/lib/definitions/vector/polyline.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,QAAuB,UAAvB;AAGA;;AAEG;;AACH,IAAA,QAAA,GAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;AAE1B;;AAEG;;;AACH,WAAA,QAAA,CAAY,MAAZ,EAAiC;AAArB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAqB;;AAAjC,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAN,KAAiB,IADrB;;AAEI,IAAA,KAAI,CAAC,OAAL,CAAa,MAAb,GAAsB,MAAtB;;AACH;AAED;;AAEG;;;AACI,EAAA,QAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACI,SAAK,OAAL,CAAa,SAAb,GAAyB,IAAzB;AACA,WAAO,IAAP;AACH,GAHM;AAKP;;;;AAIG;;;AACI,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,CAAhB,EAA2B,CAA3B,EAAoC;AAChC,SAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB;AAAE,MAAA,CAAC,EAAA,CAAH;AAAK,MAAA,CAAC,EAAA;AAAN,KAAzB;AACA,WAAO,IAAP;AACH,GAHM;;AAIX,SAAA,QAAA;AAAC,CA3BD,CAA8B,MAA9B,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Vector } from './vector';\n/**\n * Creates a polyline vector\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param points {Array<IPoint>} An array of points (optional)\n     */\n    function Polyline(points) {\n        if (points === void 0) { points = []; }\n        var _this = _super.call(this, 'polyline') || this;\n        _this.content.points = points;\n        return _this;\n    }\n    /**\n     * Closes the path\n     */\n    Polyline.prototype.closePath = function () {\n        this.content.closePath = true;\n        return this;\n    };\n    /**\n     * Adds a new point to draw the polyline\n     * @param x coord X\n     * @param y coord Y\n     */\n    Polyline.prototype.addPoint = function (x, y) {\n        this.content.points.push({ x: x, y: y });\n        return this;\n    };\n    return Polyline;\n}(Vector));\nexport { Polyline };\n//# sourceMappingURL=polyline.js.map"]},"metadata":{},"sourceType":"module"}